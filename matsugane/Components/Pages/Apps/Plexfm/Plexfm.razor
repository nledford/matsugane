@page "/apps/plexfm"
@using matsugane.Data.Db
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject MatsuganeContext Db
@attribute [StreamRendering]
@rendermode InteractiveServer
@attribute [Authorize]

<h3>Plexfm Profiles</h3>

@if (Profiles is null)
{
    <p>Loading. Please wait...</p>
}
else if (Profiles.Count == 0)
{
    <p>No profiles were found.</p>
}
else
{
    <table>
        <thead>
        <tr>
            <th>Profile</th>
            <th>Refresh Interval</th>
        </tr>
        </thead>

        <tbody>
        @foreach (var profile in Profiles)
        {
            <tr>
                <td>@profile.ProfileTitle</td>
                <td>@profile.RefreshInterval Minutes</td>
            </tr>
        }
        </tbody>
    </table>

    <ul>
        @foreach (var profile in Profiles)
        {
            <li>
                <div class="flex flex-row">
                    <div class="basis-1/2">@profile.ProfileTitle</div>
                    <div class="basis-1/2">@profile.RefreshInterval Minutes</div>
                </div>
            </li>
        }
    </ul>
}

@code {
    private List<Profile>? Profiles { get; set; } = [];

    private async Task LoadProfiles()
    {
        await using var ctx = Db;
        Profiles = await ctx.Profiles.OrderBy(x => x.ProfileTitle).ToListAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadProfiles();
    }

}