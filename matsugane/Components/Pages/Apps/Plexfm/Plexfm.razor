@page "/apps/plexfm"
@using matsugane.Data.Db
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject MatsuganeContext Db
@attribute [StreamRendering]
@rendermode InteractiveServer
@attribute [Authorize]

<h3>Plexfm Profiles</h3>

@if (_loading)
{
    <p>Loading. Please wait...</p>
}
else if (Profiles?.Count == 0)
{
    <p>No profiles were found.</p>
}
else
{
    <table>
        <thead>
        <tr>
            <th>Profile</th>
            <th>Refresh Interval</th>
            <th>Next Refresh</th>
            <td>&nbsp;</td>
        </tr>
        </thead>

        <tbody>
        @foreach (var profile in Profiles!)
        {
            <tr>
                <td>@profile.ProfileTitle</td>
                <td>@profile.RefreshInterval Minutes</td>
                <td>@profile.NextRefresh.ToString("HH:mm:ss")</td>
                <td>
                    <a href="#">Edit Profile</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    bool _loading = true;
    private List<VProfile>? Profiles { get; set; } = [];

    private async Task LoadProfiles()
    {
        _loading = true;

        await using var ctx = Db;
        Profiles = await ctx.VProfiles.OrderBy(x => x.ProfileTitle).ToListAsync();
        _loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadProfiles();
    }

}