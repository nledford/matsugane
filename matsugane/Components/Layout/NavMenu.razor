@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager

<div class="sticky top-0
      bg-neutral-950/90 backdrop-blur-sm
            border-b border-neutral-700/30">
    <nav class="container mx-auto h-16 flex flex-row items-center">
        <div class="basis-1/2">
            <a href="/">matsugane</a>
        </div>

        <div class="basis-1/2 flex flex-row items-center justify-end gap-5">
            @if (!string.IsNullOrEmpty(_username))
            {
                <div>@_username</div>
                <div>
                    <a href="/logout" class="text-orange-500">
                        Logout
                    </a>
                </div>
            }
        </div>
    </nav>
</div>

@code {

    private string? _username;

    // ReSharper disable once PreferConcreteValueOverDefault
    [CascadingParameter] public HttpContext HttpContext { get; set; } = default!;

    [CascadingParameter] private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState is not null)
        {
            var authState = await AuthState;
            _username = authState.User.Identity!.Name;
        }
        else
        {
            _username = string.Empty;
        }
    }

}